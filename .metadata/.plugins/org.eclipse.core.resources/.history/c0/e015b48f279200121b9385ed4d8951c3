package itt.t00154755.mouseapp;

import java.io.IOException;

import android.bluetooth.BluetoothDevice;
import android.bluetooth.BluetoothSocket;

	public class ConnectionThread extends Thread {
	    private final BluetoothSocket btSocket;
	    private final BluetoothDevice btDevice;
	    private String acceloData;
	 
	    public ConnectionThread(BluetoothDevice device, String acceloData) {
	        // Use a temporary object that is later assigned to mmSocket,
	        // because mmSocket is final
	        BluetoothSocket tmp = null;
	        btDevice = device;
	        this.acceloData = acceloData;
	 
	        // Get a BluetoothSocket to connect with the given BluetoothDevice
	        try {
	            // MY_UUID is the app's UUID string, also used by the server code
	            tmp = btDevice.createRfcommSocketToServiceRecord(SPP_UUID);
	        } catch (IOException e) {
	        	cUtils.error(TAG, "failed to sreate a RFCOMM service record", e);
	        }
	        btSocket = tmp;
	    }
	 
	    public void run() {
	        // Cancel discovery because it will slow down the connection
	        btAdapter.cancelDiscovery();
	 
	        try {
	            // Connect the device through the socket. This will block
	            // until it succeeds or throws an exception
	            btSocket.connect();
	        } catch (IOException connectException) {
	            // Unable to connect; close the socket and get out
	            try {
	                btSocket.close();
	            } catch (IOException closeException) { 
	            	cancel();
	            }
	            return;
	        }
	 
	        // Do work to manage the connection (in a separate thread)
	        ClientCommsThread cct = new ClientCommsThread(btSocket, acceloData);
	        cct.start();
	    }
	 
	    /** Will cancel an in-progress connection, and close the socket */
	    public void cancel() {
	        try {
	            btSocket.close();
	        } catch (IOException e) { 
	        	cUtils.error(TAG, "failed to close the socket ", e);
	        }
	    }
	}

}
