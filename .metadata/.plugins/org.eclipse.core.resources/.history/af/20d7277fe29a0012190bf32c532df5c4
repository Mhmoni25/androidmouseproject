
package itt.t00154755.mouseserver;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;

import javax.bluetooth.RemoteDevice;
import javax.microedition.io.StreamConnection;

public class ServerCommsThread extends Thread
{

	private final String TAG = "Server Communication Thread";

	private StreamConnection conn; // client
								   // connection

	private InputStream dataIn;

	private boolean isRunning = false;

	public ServerCommsThread ( StreamConnection streamConnection )
	{

		this.conn = streamConnection;

		RemoteDevice reDevice;
		try
		{
			reDevice = RemoteDevice.getRemoteDevice(conn);

			System.out.println(TAG + "...Server is Connected to: \n" + reDevice.getBluetoothAddress() + "\n" + reDevice.getFriendlyName(false));

		}
		catch ( IOException e )
		{
			// print the error stack
			e.printStackTrace();
			e.getCause();
			System.exit(-1);
		}
	}

	@Override public void run()
	{

		BufferedReader buffIn = new BufferedReader(new InputStreamReader(dataIn));
		
		//keep reading
		while (buffIn != null)
		{
			try{
				String buffer = buffIn.readLine();
				
				sendToRobot(buffer);
			}catch(IOException ioe)
			{
				ioe.printStackTrace();
			}
		}
	}

	/**
	 * @throws IOException
	 */
	private void sendDataFromTheServer() throws IOException
	{

		final String WAITING = "waiting";
		OutputStream dataOut = conn.openOutputStream();
		PrintWriter writeOut = new PrintWriter(dataOut);
		writeOut.print(WAITING);
		writeOut.flush();
	}

	private void sendToRobot( String acceloData )
	{

		System.out.println("send to robot method");
		CursorRobot cr = new CursorRobot(acceloData);
		System.out.println("start the robot");
		cr.start();
	}

	private void closeTheStream()
	{

		try
		{
			dataIn.close();
		}
		catch ( IOException e )
		{
			e.printStackTrace();
		}
	}
}// end of Class