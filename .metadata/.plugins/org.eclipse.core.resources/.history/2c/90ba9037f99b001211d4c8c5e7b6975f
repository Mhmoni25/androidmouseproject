package itt.t00154755.mouseserver;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;

import javax.bluetooth.RemoteDevice;
import javax.microedition.io.StreamConnection;

public class ServerCommsThread implements Runnable
{

	private final String TAG = "Server Communication Thread";

	private StreamConnection connection; // client


	public ServerCommsThread( StreamConnection streamConn )
	{

		System.out.println(TAG + " -constructor");
		connection = streamConn;
		
		
		RemoteDevice reDevice;
		try
		{
			reDevice = RemoteDevice.getRemoteDevice(connection);

			System.out.println(TAG + "...Server is Connected to: \n" + reDevice.getBluetoothAddress() + "\n" + reDevice.getFriendlyName(false));
		}
		catch ( IOException e )
		{
			// print the error stack
			e.printStackTrace();
			e.getCause();
			System.exit(-1);
		}
		
	}


	@Override
	public void run()
	{

		InputStream streamIn = null;
		try
		{
			streamIn = connection.openInputStream();
			BufferedReader buffIn = new BufferedReader(new InputStreamReader(streamIn));
		}
		catch ( IOException e )
		{
			// print the error stack
			e.printStackTrace();
			e.getCause();
			System.exit(-1);
		}
		

		// keep reading
		while ( true )
		{
			try
			{
				InputStream inStream=connection.openInputStream();
			    BufferedReader bReader=new BufferedReader(new InputStreamReader(inStream));
			    String lineRead=bReader.readLine();
			    System.out.println(lineRead);

				sendDataToCursorRobot(lineRead);
			}
			catch ( IOException e )
			{
				// print the error stack
				e.printStackTrace();
				e.getCause();
				System.exit(-1);
			}
		}
	}


	private void sendDataToCursorRobot( String dataIn )
	{

		System.out.println(TAG + " -sending the data");
		System.out.println(TAG + " " + dataIn);
		CursorRobot cr = new CursorRobot();
		cr.dataFromServer(dataIn);
	}

}// end of Class
