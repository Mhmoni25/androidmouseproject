package itt.t00154755.mouseserver;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.Deque;

public class ServerCommsThread implements Runnable
{

	private final String TAG = "Server Communication Thread";
	private InputStream inStream = null;


	public ServerCommsThread( InputStream inStream )
	{
		System.out.println(TAG + "...constructor");
		this.inStream = inStream;
	}


	@Override
	public void run()
	{
		System.out.println(TAG + " in the run() ");
		Deque<String> queue = new ArrayDeque<String>();
		try
		{
			// keep reading
			while ( true )
			{
				byte[] bytes = new byte[1024];
				int r;
				while ((r = inStream.read(bytes)) > 0) {
					String acceloData = (new String(bytes, 0, r));

					synchronized (acceloData) {
						queue.addFirst(acceloData);

						while (!queue.isEmpty()) {
							// start a new Thread that will handle incoming traffic
							System.out.println(TAG + "\npassing data to the robot");
							Thread robotThread = new Thread(new CursorRobot(queue.removeFirst()));
							robotThread.start();
						}

					}
				}
				
			}
		}
		catch ( IOException e )
		{
			// print the error stack
			e.printStackTrace();
			e.getCause();

			try
			{
				inStream.close();
			}
			catch ( IOException e1 )
			{
				System.out.println("closing the input stream");
			}
			System.out.println(TAG + "shutting down the server 2");
			System.exit(-1);
		}

	}

}// end of Class
